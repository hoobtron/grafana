// SPDX-License-Identifier: AGPL-3.0-only

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v0alpha1

// SpecApplyConfiguration represents an declarative configuration of the Spec type for use
// with apply.
type SpecApplyConfiguration struct {
	Intervals []IntervalApplyConfiguration `json:"intervals,omitempty"`
}

// SpecApplyConfiguration constructs an declarative configuration of the Spec type for use with
// apply.
func Spec() *SpecApplyConfiguration {
	return &SpecApplyConfiguration{}
}

// WithIntervals adds the given value to the Intervals field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Intervals field.
func (b *SpecApplyConfiguration) WithIntervals(values ...*IntervalApplyConfiguration) *SpecApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithIntervals")
		}
		b.Intervals = append(b.Intervals, *values[i])
	}
	return b
}
